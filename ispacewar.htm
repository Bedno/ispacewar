<html>
<head>
<title>iSpacewar!</title>
<meta name="keywords" content="iSpacewar, Spacewar, game, oldest, vintage, first, PDP-1, emulator, gerasimov, silverman, Graetz, Russell, Wiitanen">
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=1" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
<meta property="og:title" content="iSpacewar!">
<meta property="og:description" content="Smartphone version of the world's first video game (1962's Spacewar!).">
<meta property="og:image" content="https://bedno.com/g/pdp1/iSpacewar.jpg">
<meta property="og:type" content="website" />
<meta property="og:url" content="https://bedno.com/ispacewar">
<meta property="og:site_name" content="Bedno.com">
<link rel='shortcut icon' href='https://bedno.com/g/pdp1/spacewar.ico'>
<script>
// iSpacewar! The world's first video game (1962's 'Spacewar!') running on a simulation of the world's first commercially produced computer (DEC's PDP-1)
// with added touch controls and sizing for smartphone and tablet play.  Pure Javascript, works full screen in any modern browser.
// Maneuver with retros & thruster; avoid star's gravity; Left+Right risks Hyperspace; fuel & torpedos are limited.
// Runs the actual vintage code using touch pads as toggle switches and faithfully replicating the CRT.
// Part of an art project detailed at http://bedno.com/spacewar/about
// Mostly by Andrew Bedno - http://AndrewBedno.com
// Hereby released for the betterment of humankind as it has some slick routines worth sharing.
// If I had money to burn I'd restore my Apple dev license, drop it into Cordova and publish a native App.  Job offers welcome.

// === VARS and CONFIG ===

// Main screen.
var CRTtimer, CRTlayer, CRTcanvas = null;
const CRTms = 56*2;  // Cycletime in milliseconds to set frames per second (1000/n=fps).  Was 56 but that felt too fast.
// Fading frames support.
var CRTidxFrame = 0;  var CRTidxMax = -1;  var CRTframeShade = 0;
var CRTlpFrame = 0;  var CRTlpPix = 0;  var CRTofsFrame = 0;  var CRTofsPix = 0;
const CRTmaxFrame = 9;  // Maximum frames tro capture.
const CRTmaxPix = 500; // Testing showed ~400 points per frame.
const CRTframeDiv = 2;  var CRTframeSub = 0;  // Frame capture frequency.
var CRTframes = new Array(CRTmaxFrame);  var CRTiniFrame;  var CRTiniPix;
// Is this really how one creates multi-dimensional arrays in Javascript?!? :P
for (CRTiniFrame=0; CRTiniFrame<CRTmaxFrame; CRTiniFrame++) {
  CRTframes[CRTiniFrame] = new Array(CRTmaxPix);
  for (CRTiniPix=0; CRTiniPix<CRTmaxPix; CRTiniPix++) {
    CRTframes[CRTiniFrame][CRTiniPix] = new Array(2); // created an x,y in a pixel in a frame
  }
}
var CRTframePix = new Array(); // Trustworthy count of items in each fade frame
var CRThgt = 512;  var CRTwid = 512;  var CRTmin = 0;  // Screen dimensions.  Overriden later.
var WinWid = 0;  var WinHgt = 0;
var ResizeTimer = null;
var WinIsTall = -1;  var WinWasTall = -1;  // orientation change detection
var PixWid = 1;  var PixHgt = 1;  // Resized pixel.  Overriden later.
// Touchpad opacity effects support.
const OpacityMax = 0.6;  const OpacityMin = 0.2;
var BtnOpacity = OpacityMin;  var ActionCnt = 0;  var BtnCycles = 0;
var BtnTimer = null;
const BtnBorderPix = 5;  // Width of corner rounding.
var UserKeycode = 0;  // main keypress

// === USER ===

// Various keys and aliases are mapped to PDP-1 toggles for two player game where keyboard present.
function UserKeyDown(e){
  // Slight tweak on classic key clusters: ASDW JKLI - plus numeric keypad variations.
  UserKeycode = e.keyCode;
  // Keycodes determined by testing, don't exactly match ASCII.
  if ( (UserKeycode==87) || (UserKeycode==40) || (UserKeycode==98) || (UserKeycode==50) ) PDPcontrol |= 01;         // W | 2: A torpedo
  if ( (UserKeycode==83) || (UserKeycode==37) || (UserKeycode==100) || (UserKeycode==52) ) PDPcontrol |= 02;        // S | 4: A thrust
  if ( (UserKeycode==68) || (UserKeycode==35) || (UserKeycode==97) || (UserKeycode==49) ) PDPcontrol |= 04;         // D | 1: A right
  if ( (UserKeycode==65) || (UserKeycode==36) || (UserKeycode==103) || (UserKeycode==55) ) PDPcontrol |= 010;       // A | 7: A left
  if ( (UserKeycode==79) || (UserKeycode==38) || (UserKeycode==104) || (UserKeycode==56) ) PDPcontrol |= 040000;    // O | 8: B torpedo
  if ( (UserKeycode==75) || (UserKeycode==39) || (UserKeycode==102) || (UserKeycode==54) ) PDPcontrol |= 0100000;   // K | 6: B thrust
  if ( (UserKeycode==76) || (UserKeycode==33) || (UserKeycode==105) || (UserKeycode==57) ) PDPcontrol |= 0200000;   // L | 9: B right
  if ( (UserKeycode==74) || (UserKeycode==34) || (UserKeycode==99) || (UserKeycode==51) ) PDPcontrol |= 0400000;    // J | 3: B left
  if ( (UserKeycode==32) || (UserKeycode==191) || (UserKeycode==12) || (UserKeycode==101) || (UserKeycode==53) )  { AboutToggle(0); } else { if (BtnCycles>0) { AboutToggle(-1); } }
  ButtonTimerReset();
  if ( (UserKeycode==32) || (UserKeycode==13) )  { AboutToggle(-1); }
}
function UserKeyUp(e){
  UserKeycode = e.keyCode;
  if ( (UserKeycode==87) || (UserKeycode==40) || (UserKeycode==98) || (UserKeycode==50) ) PDPcontrol &= ~01;        // W | 2: A torpedo
  if ( (UserKeycode==83) || (UserKeycode==37) || (UserKeycode==100) || (UserKeycode==52) ) PDPcontrol &= ~02;       // S | 4: A thrust
  if ( (UserKeycode==68) || (UserKeycode==35) || (UserKeycode==97) || (UserKeycode==49) ) PDPcontrol &= ~04;        // D | 1: A right
  if ( (UserKeycode==65) || (UserKeycode==36) || (UserKeycode==103) || (UserKeycode==55) ) PDPcontrol &= ~010;      // A | 7: A left
  if ( (UserKeycode==79) || (UserKeycode==38) || (UserKeycode==104) || (UserKeycode==56) ) PDPcontrol &= ~040000;   // O | 8: B torpedo
  if ( (UserKeycode==75) || (UserKeycode==39) || (UserKeycode==102) || (UserKeycode==54) ) PDPcontrol &= ~0100000;  // K | 6: B thrust
  if ( (UserKeycode==76) || (UserKeycode==33) || (UserKeycode==105) || (UserKeycode==57) ) PDPcontrol &= ~0200000;  // L | 9: B right
  if ( (UserKeycode==74) || (UserKeycode==34) || (UserKeycode==99) || (UserKeycode==51) ) PDPcontrol &= ~0400000;   // J | 3: B left
  if ( (BtnCycles>0) && (UserKeycode!=32) && (UserKeycode!=191) && (UserKeycode!=12) && (UserKeycode!=101) && (UserKeycode!=53))  { AboutToggle(-1); }
}
// Central handler for touchpad controls, similar to keyboard handlers above.
function UserTap (CTin) {
  ButtonTimerReset();
  if (CTin==2) PDPcontrol |= 01;         // W | 2: A torpedo
  if (CTin==4) PDPcontrol |= 02;         // S | 4: A thrust
  if (CTin==1) PDPcontrol |= 04;         // D | 1: A right
  if (CTin==7) PDPcontrol |= 010;        // A | 7: A left
  if (CTin==8) PDPcontrol |= 040000;     // O | 8: B torpedo
  if (CTin==6) PDPcontrol |= 0100000;    // K | 6: B thrust
  if (CTin==9) PDPcontrol |= 0200000;    // L | 9: B right
  if (CTin==3) PDPcontrol |= 0400000;    // J | 3: B left
  if (CTin==5) AboutToggle(0);
  if (CTin==-2) PDPcontrol &= ~01;       // W | 2: A torpedo
  if (CTin==-4) PDPcontrol &= ~02;       // S | 4: A thrust
  if (CTin==-1) PDPcontrol &= ~04;       // D | 1: A right
  if (CTin==-7) PDPcontrol &= ~010;      // A | 7: A left
  if (CTin==-8) PDPcontrol &= ~040000;   // O | 8: B torpedo
  if (CTin==-6) PDPcontrol &= ~0100000;  // K | 6: B thrust
  if (CTin==-9) PDPcontrol &= ~0200000;  // L | 9: B right
  if (CTin==-3) PDPcontrol &= ~0400000;  // J | 3: B left
  if ( (CTin!=-5) && (CTin!=5) ) AboutToggle(-1);
}

// User interface special effects.  Fades keypad reminders in/out if player inactive.
function ButtonHide () {
  BtnOpacity = BtnOpacity * 0.9;
  if (BtnOpacity < OpacityMin) { BtnOpacity = OpacityMin; }
  document.getElementById('UserControls').style.opacity = BtnOpacity;
  if (BtnOpacity > OpacityMin) { BtnTimer = setTimeout('ButtonHide()', 50); } else { BtnTimer = setTimeout('ButtonUnhide()',5000); BtnCycles = 1; }
}
function ButtonUnhide () {
  if (BtnOpacity < OpacityMin) { BtnOpacity = OpacityMin; }
  BtnOpacity = BtnOpacity * 1.1;
  if (BtnOpacity > OpacityMax) { BtnOpacity = OpacityMax; }
  document.getElementById('UserControls').style.opacity = BtnOpacity;
  if (BtnOpacity < OpacityMax) {
    BtnTimer = setTimeout('ButtonUnhide()', 50);
  } else {
    BtnTimer = setTimeout('ButtonHide()',4000);
  }
}
// Any user action instantly hide the controls and set up the timer to fade them in again later.
function ButtonTimerReset () {
  if (ActionCnt == 1) {
    AboutToggle(-1);
    BtnOpacity = OpacityMax;
    BtnTimer = setTimeout('ButtonHide()',2000);
    CRTtimer = setTimeout('UpdFrame()', CRTms);
  } else {
    if (ActionCnt > 1) {
      BtnOpacity = OpacityMin;
      document.getElementById('UserControls').style.opacity = OpacityMin;
      if (BtnTimer!=null) { clearTimeout(BtnTimer); BtnTimer=null; }
      BtnTimer = setTimeout('ButtonUnhide()', 4000);
    }
  }
  ActionCnt = Math.min(ActionCnt+1,999);
}
// Position and size a touchpad.
// Automatically calculates neat proportional fits using ratios and some fixed widths.
function ButtonAdj (BtnName, BtnCol, BtnRow, BtnMsg, BtnAlign, BtnNum, BtnKey, BtnTeam) {
  var BtnKeyFmt = "";  var BtnColor = "";
  if (BtnTeam=='A') { BtnColor = "blue"; } else { if (BtnTeam=='B') { BtnColor = "red"; } else { BtnColor = "yellow"; } }
  if (document.getElementById('Ctl'+BtnName)) {
    document.getElementById('Div'+BtnName).style.width = Math.floor((CRTwid-(BtnBorderPix*6*2))/3).toString()+'px';
    document.getElementById('Div'+BtnName).style.height = Math.floor((CRThgt-(BtnBorderPix*6*2))/3).toString()+'px';
    document.getElementById('Div'+BtnName).style.left = Math.floor(BtnBorderPix+BtnCol*(CRTwid/3)).toString()+'px';
    document.getElementById('Div'+BtnName).style.top = Math.floor(BtnBorderPix+BtnRow*(CRThgt/3)).toString()+'px';
    document.getElementById('Div'+BtnName).style.textAlign = BtnAlign;
    document.getElementById('Div'+BtnName).style.borderRadius = BtnBorderPix.toString()+"px";
    document.getElementById('Div'+BtnName).style.border = BtnBorderPix.toString()+"px solid "+BtnColor;
    document.getElementById('Ctl'+BtnName).style.paddingTop = Math.floor(CRThgt/11).toString()+'px';
    BtnKeyFmt = "";
    if (BtnAlign.indexOf("left")>=0) { BtnKeyFmt += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" }
    BtnKeyFmt += '<b>'+BtnKey+'</b>';
    if (BtnAlign.indexOf("right")>=0) { BtnKeyFmt += "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" }
    BtnKeyFmt = '<span style="font-size:'+Math.floor((CRThgt-(BtnBorderPix*6))/22).toString()+'px"><br>'+BtnKeyFmt+'</span>';
    document.getElementById('Btn'+BtnName).innerHTML = '&nbsp;'+BtnMsg+'&nbsp;'; // +BtnKeyFmt;
    document.getElementById('Btn'+BtnName).style.backgroundColor = '#000000';
    document.getElementById('Btn'+BtnName).style.fontSize = Math.floor((CRTmin-(BtnBorderPix*6*2))/14).toString()+'px';
    document.getElementById('Btn'+BtnName).style.color = BtnColor;
    document.getElementById('Pad'+BtnName).style.width = Math.floor((CRTwid-(BtnBorderPix*6*2))/3).toString()+'px';
    document.getElementById('Pad'+BtnName).style.height = Math.floor((CRThgt-(BtnBorderPix*6*2))/3).toString()+'px';
    document.getElementById('Pad'+BtnName).style.left = Math.floor(BtnCol*((CRTwid+BtnBorderPix*2)/3)).toString()+'px';
    document.getElementById('Pad'+BtnName).style.top = Math.floor(BtnRow*((CRThgt+BtnBorderPix*2)/3)).toString()+'px';
  }
}
// Show tailed diagnostic log, activated by making debug div visible.
function DebugMsg (DbgIn) {
  var DbgCurr = document.getElementById('DivDebug').innerText;
  if (document.getElementById('DivDebug')) {
    if (document.getElementById('DivDebug').style.visibility=='visible') {
      if ( (DbgCurr.length>400) && (DbgCurr.length>DbgIn.length) ) {
        DbgCurr = DbgCurr.substr(DbgIn.length);
      }
      document.getElementById('DivDebug').innerText = DbgCurr+DbgIn+"\n";
    }
  }
}
// Splash screen / Help info show/hide.
function AboutToggle (ATin) {
  if (document.getElementById('DivAbout')) {
    if (ATin>0) {
      document.getElementById('DivAbout').style.visibility='visible';
    } else {
      if (ATin<0) {
        document.getElementById('DivAbout').style.visibility='hidden';
      } else {
        if (document.getElementById('DivAbout').style.visibility=='hidden') {
          document.getElementById('DivAbout').style.visibility='visible';
        } else {
          document.getElementById('DivAbout').style.visibility='hidden';
        }
      }
    }
  }
}
// Add touch listeners, once.
function TouchPadEventSetup (PSname,PSnum) {
  document.getElementById('Pad'+PSname).addEventListener("mousedown", function (event) {UserTap(PSnum); event.preventDefault();}, true);
  document.getElementById('Pad'+PSname).addEventListener("mouseup", function (event) {UserTap(0-PSnum); event.preventDefault();}, true);
  document.getElementById('Pad'+PSname).addEventListener("touchstart", function (event) {UserTap(PSnum); event.preventDefault();}, true);
  document.getElementById('Pad'+PSname).addEventListener("touchmove", function (event) {UserTap(PSnum); event.preventDefault();}, true);
  document.getElementById('Pad'+PSname).addEventListener("touchend", function (event) {UserTap(0-PSnum); event.preventDefault();}, true);
  document.getElementById('Pad'+PSname).addEventListener("touchcancel", function (event) {UserTap(0-PSnum); event.preventDefault();}, true);
  document.getElementById('Pad'+PSname).addEventListener("dblclick", function (event) {UserTap(0-PSnum); event.preventDefault();}, true);
}
// First time startup, for onetime processes.
function ClientBoot () {
  if (document.getElementById('CRTcanvas')) {
    CRTcanvas = document.getElementById('CRTcanvas');
    document.getElementById('CRTcanvas').addEventListener("mousedown", function (event) {event.preventDefault();}, true);
    document.getElementById('CRTcanvas').addEventListener("mouseup", function (event) {event.preventDefault();}, true);
    document.getElementById('CRTcanvas').addEventListener("touchstart", function (event) {event.preventDefault();}, true);
    document.getElementById('CRTcanvas').addEventListener("touchmove", function (event) {event.preventDefault();}, true);
    document.getElementById('CRTcanvas').addEventListener("touchend", function (event) {event.preventDefault();}, true);
    document.getElementById('CRTcanvas').addEventListener("touchcancel", function (event) {event.preventDefault();}, true);
    document.getElementById('CRTcanvas').addEventListener("dblclick", function (event) {event.preventDefault();}, true);
  }
  // touch fall throughs
  document.getElementById('UserControls').addEventListener("mousedown", function (event) {event.preventDefault();}, true);
  document.getElementById('UserControls').addEventListener("mouseup", function (event) {event.preventDefault();}, true);
  document.getElementById('UserControls').addEventListener("touchstart", function (event) {event.preventDefault();}, true);
  document.getElementById('UserControls').addEventListener("touchmove", function (event) {event.preventDefault();}, true);
  document.getElementById('UserControls').addEventListener("touchend", function (event) {event.preventDefault();}, true);
  document.getElementById('UserControls').addEventListener("touchcancel", function (event) {event.preventDefault();}, true);
  document.getElementById('UserControls').addEventListener("dblclick", function (event) {event.preventDefault();}, true);
  TouchPadEventSetup('ATorpedo',2);  // W | 2: A torpedo
  TouchPadEventSetup('AThrust',4);  // S | 4: A thrust
  TouchPadEventSetup('ARight',1);  // D | 1: A right
  TouchPadEventSetup('ALeft',7);  // A | 7: A left
  TouchPadEventSetup('Center',5);  // ' ' | 5: help
  TouchPadEventSetup('BTorpedo',8);  // O | 8: B torpedo
  TouchPadEventSetup('BThrust',6);  // K | 6: B thrust
  TouchPadEventSetup('BRight',9);  // L | 9: B right
  TouchPadEventSetup('BLeft',3);  // J | 3: B left
  ClientSetup();  // setup screen
  // final global listeners, resize/orient handler...
  window.onkeydown = function(e){UserKeyDown(e);}
  window.onkeyup = function(e){UserKeyUp(e);}
  window.onresize = function(event) {
    if (ResizeTimer) { clearTimeout(ResizeTimer); ResizeTimer = null; }
    ResizeTimer = setTimeout('ClientSetup()',1200);
  }
  // Splash screen.
  AboutToggle(1);
  // Attempts (but fails) to fix Safari problem where URL bar sometimes covers top row of webpage.
  window.scrollTo(0, 1);
  // Launch main engine, which sets it's own timer to continue running.
  UpdFrame();
  setTimeout('AboutToggle(-1);',8000)
}

// Overall master client boot environment setup and launch.
function ClientSetup () {
  var WinWidTmp = window.innerWidth && document.documentElement.clientWidth ? Math.min(window.innerWidth, document.documentElement.clientWidth) : window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth;
  var WinHgtTmp = window.innerHeight && document.documentElement.clientHeight ? Math.min(window.innerHeight, document.documentElement.clientHeight) : window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight;
  WinWid = WinWidTmp;  WinHgt = WinHgtTmp;
  if ( (WinWid>=64) && (WinWid<=PDPmax) ) {
    if ( (WinHgt>=64) && (WinHgt<=PDPmax) ) {
      WinWasTall = WinIsTall;
      WinIsTall = ( (WinHgt>WinWid) ? 1 : 0 );
      if ( (WinWasTall>=0) && (WinIsTall>=0) && (WinWasTall!=WinIsTall) ) { location.reload(); }
      CRTwid = WinWid;  CRThgt = WinHgt;
      CRTmin = Math.min(CRThgt,CRTwid);
      // Minimum pixel size is 2 if screen is at all modestly big, else it grows as a fraction of total screen size.
      PixWid = Math.max(((CRTwid>200)?2:1),Math.round(CRTwid/512));
      PixHgt = Math.max(((CRThgt>200)?2:1),Math.round(CRThgt/512));
    }
  }
  if (document.getElementById('CRTdiv')) { document.getElementById('CRTdiv').width = CRTwid+'px'; }
  if (document.getElementById('CRTdiv')) { document.getElementById('CRTdiv').height = CRThgt+'px'; }
  if (document.getElementById('CRTclip')) { document.getElementById('CRTclip').style.width = CRTwid+'px'; }
  if (document.getElementById('CRTclip')) { document.getElementById('CRTclip').style.height = CRThgt+'px'; }
  if (document.getElementById('CRTcanvas')) { document.getElementById('CRTcanvas').style.width = CRTwid+'px'; }
  if (document.getElementById('CRTcanvas')) { document.getElementById('CRTcanvas').style.height = CRThgt+'px'; }
  if (document.getElementById('UserControls')) { document.getElementById('UserControls').style.width = CRTwid+'px'; }
  if (document.getElementById('UserControls')) { document.getElementById('UserControls').style.height = CRThgt+'px'; }
  ButtonAdj('ATorpedo',1,2,'Torpedo', 'left',2,'W', 'A');  // W | 2: A torpedo
  ButtonAdj('AThrust',0,1,'Thrust', 'left',4,'S', 'A');  // S | 4: A thrust
  ButtonAdj('ARight',0,2,'Right', 'left',1,'D', 'A');  // D | 1: A right
  ButtonAdj('ALeft',0,0,'Left', 'left',7,'A', 'A');  // A | 7: A left
  ButtonAdj('Center',1,1,'', 'center',5,' ', '');  // ' ' | 5: help
  ButtonAdj('BTorpedo',1,0,'Torpedo', 'right',8,'O', 'B');  // O | 8: B torpedo
  ButtonAdj('BThrust',2,1,'Thrust', 'right',6,'K', 'B');  // K | 6: B thrust
  ButtonAdj('BRight',2,0,'Right', 'right',9,'L', 'B');  // L | 9: B right
  ButtonAdj('BLeft',2,2,'Left', 'right',3,'J', 'B');  // J | 3: B left
  try {
    if (document.getElementById('CRTcanvas')) {
      CRTcanvas.width = CRTwid;
      CRTcanvas.height = CRThgt;
      CRTlayer = CRTcanvas.getContext('2d');
      CRTlayer.fillStyle = '#ffffff';
      CRTlayer.clearRect(0,0,CRTwid,CRThgt);
      CRTidxFrame = 0;
      CRTidxMax = -1;
      CRTframePix[CRTidxFrame] = 0;
    }
  } catch (err) { CRTcanvas=null; }
  document.getElementById('AboutText').style.fontSize = Math.floor(CRTmin/22).toString()+'px';
  document.getElementById('AboutTitle').style.fontSize = Math.floor(CRTmin/14).toString()+'px';
}

// PDP-1 "Mode 30" CRT is emulated here on an HTML5 canvas.
// The PDP-1's plot command appears to use range 0-(octal)777,777 (aka PDPmax)
// But I've read the "Direct View Display" rendered to 1024x1024 accuracy in a square (with center 0,0?).
// So to technically match the original, set CRTwid and CRThgt to 1024, however it could conceivably resize up to 262144?
// In this case the screen is mapped to full available window and pixel size is scaled without retaining aspect ratio to allow embedded use at any dimensions.
// The original used a persistent phosphor display which created a bright initial point then an afterimage fading over a few seconds for each point plotted.
// The fading effect is laboriously recreated here using a frame buffering approach.
function ClientPlot (PPx, PPy) {
  PPx = Math.round(PPx * CRTwid / PDPmax);   // Octal 777 777 = 8^6-1 = decimal 262143
  PPy = Math.round(CRThgt - (PPy * CRThgt / PDPmax));
  if (CRTcanvas!=null) {
    CRTlayer.fillRect(PPx,PPy,PixWid,PixHgt);  // draw pixel, individually resized appropriately as tiny fraction of screen size, ignoring aspect ratio.
  }
  // Also record each point plotted in current frame for subsequent fading.
  if (CRTmaxFrame>0) {
    if (CRTframeSub<1) {
      if (CRTframePix[CRTidxFrame] < CRTmaxPix) {
        CRTframes[CRTidxFrame][CRTframePix[CRTidxFrame]] = [PPx,PPy];
        CRTframePix[CRTidxFrame]++;
      }
    }
  }
}

// Master frame rate set by periodically clearing screen then running PDP-1 to next frame. CRTms sets cycle time.
function UpdFrame () {
  // Clear canvas.
  CRTlayer.clearRect(0,0,CRTwid,CRThgt);
  if (CRTcanvas!=null) {
    // Redraw previous frames to create a fading persistant phosphorescence effect, from oldest (darkest) to newest (lightest).
    if (CRTmaxFrame>0) {  // Set < 1 to disable trails.
      if (CRTidxMax>0) {
        CRTofsFrame = CRTidxFrame+1;  if (CRTofsFrame>CRTidxMax) { CRTofsFrame = 0; }
        for (CRTlpFrame = 0;  CRTlpFrame<=CRTidxMax; CRTlpFrame++) {
          // Create a hex code for a darkening shade of green (from x64 to 0).
          CRTframeShade = Number(Math.floor((CRTlpFrame/CRTidxMax)*100)).toString(16);  
          while (CRTframeShade.length < 2) { CRTframeShade = '0'+CRTframeShade; }
          CRTlayer.fillStyle = '#00'+CRTframeShade+'00';
          // Draw all pixels in aging frame.
          for (CRTlpPix = 0; CRTlpPix < CRTframePix[CRTofsFrame]; CRTlpPix++) {
            CRTlayer.fillRect(CRTframes[CRTofsFrame][CRTlpPix][0],CRTframes[CRTofsFrame][CRTlpPix][1],PixWid+1,PixHgt+1);
          }
          CRTofsFrame++;  if (CRTofsFrame>CRTidxMax) { CRTofsFrame = 0; }
        }
      }
    }
  }
  // Clear fade buffer for next frame.
  if (CRTmaxFrame>0) {
    if (CRTframeSub>=CRTframeDiv) { // Optional sub-sampling, captures only one echo for each n frames
      // Frames are stored in a circular buffer, where index points to new head.
      CRTidxFrame++;  if (CRTidxFrame >= CRTmaxFrame) CRTidxFrame = 0;
      CRTidxMax = Math.max(CRTidxMax,CRTidxFrame);  // Track how many frames actually used to far, just to handle first n before buffer fills.
      CRTframePix[CRTidxFrame] = 0;
      CRTframeSub = 0;
    } else { CRTframeSub++; }
  }
  CRTlayer.fillStyle = '#ffffff';
  // This bit of magic, if I understand right, runs PDP-1 opcodes until an exact known point (program counter at octal 2051)
  // which is the main frame loop in the game executable, thus limiting run rate to real world timing.
  while (PDPpc!=02051) PDPexecute(PDPmemory[PDPpc++]); PDPexecute(PDPmemory[PDPpc++]);  // First pass draws ships.
  while (PDPpc!=02051) PDPexecute(PDPmemory[PDPpc++]); PDPexecute(PDPmemory[PDPpc++]);  // Second pass draws stars.
  // Queue to run next frame.  Timer use instead of setInterval to prevent possible event pileup.
  CRTtimer = setTimeout('UpdFrame()', CRTms);
}

// === PDP-1 ===

// Rewritten for clarity and simplicity, based on works by Barry Silverman, Brian Silverman, and Vadim Gerasimov via http://www.masswerk.at/spacewar
// Externalized globals:
const PDPmax = 0777777; // Maximum six digit octal value.
var PDPpc=4;  // Program counter.
var PDPcontrol = 0;  // Toggle switches.
// Internal PDP* vars exactly represent the vintage machine's internal registers and buses:
var PDPac=0, PDPio=0, PDPy=0, PDPib=0, PDPov=0;
var PDPtarget = 0;  var PDPlp = 0;
var PDPplotX=0, PDPplotY=0;
var PDPflag = [false, false, false, false, false, false, false];
var PDPsense = [false, false, false, false, false, false, false];
var PDPboth, PDPnflag, PDPmask, PDPstate, PDPnshift, PDPsign, PDPcond, PDPacl = 0;
// Octal factors for shifters.
const PDP_k17=0400000, PDP_k18=01000000, PDP_k19=02000000, PDP_k35=0400000000000;
// Primary PDP1 OpCodes
const PDP_AND=001, PDP_IOR=002, PDP_XOR=003, PDP_XCT=004, PDP_CAL=007;
const PDP_LAC=010, PDP_LIO=011, PDP_DAC=012, PDP_DAP=013, PDP_DIO=015, PDP_DZM=016;
const PDP_ADD=020, PDP_SUB=021, PDP_IDX=022, PDP_ISP=023;
const PDP_SAD=024, PDP_SAS=025, PDP_MUS=026, PDP_DIS=027;
const PDP_JMP=030, PDP_JSP=031, PDP_SKP=032, PDP_SFT=033;
const PDP_LAW=034, PDP_IOT=035, PDP_OPR=037;
// Adjust for optional indexed addressing of operand.
function PDPim() {
  while(true){
    if (PDPib==0) return;
    PDPib=(PDPmemory[PDPy]>>12)&1;
    PDPy=PDPmemory[PDPy]&07777;
  }
}
// Execute a PDP-1 opcode.
function PDPexecute(PDPmd) {
  PDPy=PDPmd&07777; PDPib=(PDPmd>>12)&1;
  switch (PDPmd>>13) {
    case PDP_AND: PDPim(); PDPac&=PDPmemory[PDPy]; break;
    case PDP_IOR: PDPim(); PDPac|=PDPmemory[PDPy]; break;
    case PDP_XOR: PDPim(); PDPac^=PDPmemory[PDPy]; break;
    case PDP_XCT: PDPim(); PDPexecute(PDPmemory[PDPy]); break;
    case PDP_CAL:
      PDPtarget=(PDPib==0)?64:PDPy;
      PDPmemory[PDPtarget]=PDPac;
      PDPac=(PDPov<<17)+PDPpc;
      PDPpc=PDPtarget+1;
      break;
    case PDP_LAC: PDPim(); PDPac=PDPmemory[PDPy]; break;
    case PDP_LIO: PDPim(); PDPio=PDPmemory[PDPy]; break;
    case PDP_DAC: PDPim(); PDPmemory[PDPy]=PDPac; break;
    case PDP_DAP: PDPim(); PDPmemory[PDPy]=(PDPmemory[PDPy]&0770000)+(PDPac&07777); break;
    case PDP_DIO: PDPim(); PDPmemory[PDPy]=PDPio; break;
    case PDP_DZM: PDPim(); PDPmemory[PDPy]=0; break;
    case PDP_ADD:
      PDPim();
      PDPac=PDPac+PDPmemory[PDPy];
      PDPov=PDPac>>18;
      PDPac=(PDPac+PDPov)&PDPmax;
      if (PDPac==PDPmax) PDPac=0;
      break;
    case PDP_SUB:
      PDPim();
      PDPsign=((PDPac>>17)^(PDPmemory[PDPy]>>17))==1;
      PDPac=PDPac+(PDPmemory[PDPy]^PDPmax);
      PDPac=(PDPac+(PDPac>>18))&PDPmax;
      if (PDPac==PDPmax) PDPac=0;
      if (PDPsign&&(PDPmemory[PDPy]>>17==PDPac>>17)) PDPov=1;
      break;
    case PDP_IDX:
      PDPim();
      PDPac=PDPmemory[PDPy]+1;
      if(PDPac==PDPmax) PDPac=0;
      PDPmemory[PDPy]=PDPac;
      break;
    case PDP_ISP:
      PDPim();
      PDPac=PDPmemory[PDPy]+1;
      if(PDPac==PDPmax) PDPac=0;
      PDPmemory[PDPy]=PDPac;
      if((PDPac&0400000)==0) PDPpc++;
      break;
    case PDP_SAD: PDPim(); if(PDPac!=PDPmemory[PDPy]) PDPpc++; break;
    case PDP_SAS: PDPim(); if(PDPac==PDPmemory[PDPy]) PDPpc++; break;
    case PDP_MUS:
      PDPim();
      if ((PDPio&1)==1){
        PDPac=PDPac+PDPmemory[PDPy];
        PDPac=(PDPac+(PDPac>>18))&PDPmax;
        if (PDPac==PDPmax) PDPac=0;
      }
      PDPio=(PDPio>>1|PDPac<<17)&PDPmax;
      PDPac>>=1;
      break;
    case PDP_DIS:
      PDPim();
      PDPacl = PDPac>>17;
      PDPac=(PDPac<<1|PDPio>>17)&PDPmax;
      PDPio=((PDPio<<1|PDPacl)&PDPmax)^1;
      if ((PDPio&1)==1){
        PDPac=PDPac+(PDPmemory[PDPy]^PDPmax);
        PDPac=(PDPac+(PDPac>>18))&PDPmax;}
      else {
        PDPac=PDPac+1+PDPmemory[PDPy];
        PDPac=(PDPac+(PDPac>>18))&PDPmax;
      }
      if (PDPac==PDPmax) PDPac=0;
      break;
    case PDP_JMP: PDPim(); PDPpc=PDPy; break;
    case PDP_JSP: PDPim(); PDPac=(PDPov<<17)+PDPpc; PDPpc=PDPy; break;
    case PDP_SKP:
      PDPcond =
        (((PDPy&0100)==0100)&&(PDPac==0)) ||
        (((PDPy&0200)==0200)&&(PDPac>>17==0)) ||
        (((PDPy&0400)==0400)&&(PDPac>>17==1)) ||
        (((PDPy&01000)==01000)&&(PDPov==0)) ||
        (((PDPy&02000)==02000)&&(PDPio>>17==0))||
        (((PDPy&7)!=0)&&!PDPflag[PDPy&7])||
        (((PDPy&070)!=0)&&!PDPsense[(PDPy&070)>>3])||
        ((PDPy&070)==010);
      if (PDPib==0) {if (PDPcond) PDPpc++;}
      else {if (!PDPcond) PDPpc++;}
      if ((PDPy&01000)==01000) PDPov=0;
      break;
    case PDP_SFT:
      PDPnshift = 0;
      PDPmask = PDPmd&0777;
      while (PDPmask!=0) {PDPnshift+=PDPmask&1; PDPmask=PDPmask>>1;}
      switch ((PDPmd>>9)&017) {
        case 1: for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPac=(PDPac<<1|PDPac>>17)&PDPmax; break;
        case 2: for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPio=(PDPio<<1|PDPio>>17)&PDPmax; break;
        case 3:
          for(PDPlp=0;PDPlp<PDPnshift;PDPlp++){
            PDPboth=PDPac*PDP_k19+PDPio*2+Math.floor(PDPac/PDP_k17);
            PDPac = Math.floor(PDPboth/PDP_k18) % PDP_k18;
            PDPio = PDPboth % PDP_k18;
          }
          break;
        case 5:
          for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPac=((PDPac<<1|PDPac>>17)&0377777)+(PDPac&0400000);
          break;
        case 6:
          for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPio=((PDPio<<1|PDPio>>17)&0377777)+(PDPio&0400000);
          break;
        case 7:
          for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) {
            PDPboth = (PDPac&0177777)*PDP_k19+PDPio*2+Math.floor(PDPac/PDP_k17);
            PDPboth += (PDPac&0400000)*PDP_k18;
            PDPac = Math.floor(PDPboth/PDP_k18) % PDP_k18;
            PDPio = PDPboth % PDP_k18;
          }
          break;
        case 9: for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPac=(PDPac>>1|PDPac<<17)&PDPmax; break;
        case 10: for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPio=(PDPio>>1|PDPio<<17)&PDPmax; break;
        case 11:
          for(PDPlp=0;PDPlp<PDPnshift;PDPlp++){
            PDPboth = PDPac*PDP_k17+Math.floor(PDPio/2)+(PDPio&1)*PDP_k35;
            PDPac = Math.floor(PDPboth/PDP_k18) % PDP_k18;
            PDPio = PDPboth % PDP_k18;
          }
          break;
        case 13: for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPac=(PDPac>>1)+(PDPac&0400000); break;
        case 14: for(PDPlp=0;PDPlp<PDPnshift;PDPlp++) PDPio=(PDPio>>1)+(PDPio&0400000); break;
        case 15:
          for(PDPlp=0;PDPlp<PDPnshift;PDPlp++){
            PDPboth = PDPac*PDP_k17+Math.floor(PDPio/2)+(PDPac&0400000)*PDP_k18;
            PDPac = Math.floor(PDPboth/PDP_k18) % PDP_k18;
            PDPio = PDPboth % PDP_k18;
          }
          break;
      }
      break;
  case PDP_LAW: PDPac=(PDPib==0)?PDPy:PDPy^PDPmax; break;
  case PDP_IOT:
    if ((PDPy&077)==7) {  // Plot point on CRT.
      PDPplotX=(PDPac+0400000)&PDPmax;
      PDPplotY=(PDPio+0400000)&PDPmax;
      ClientPlot(PDPplotX,PDPplotY);
    }
    if ((PDPy&077)==011) {  // Read user input controllers.
      PDPio = PDPcontrol;
    }
    break;
  case PDP_OPR:
    if((PDPy&0200)==0200) PDPac=0;
    if((PDPy&04000)==04000) PDPio=0;
    if((PDPy&01000)==01000) PDPac^=PDPmax;
    PDPnflag=PDPy&7;
    if (PDPnflag<2) break;
    PDPstate=(PDPy&010)==010;
    if (PDPnflag==7) {
      for (PDPlp=2;PDPlp<7;PDPlp++) PDPflag[PDPlp]=PDPstate;
      break;
    }
    PDPflag[PDPnflag]=PDPstate;
    break;
  }
}
// Game program octal file compiled from the original assembler via via http://spacewar.oversigma.com
var PDPmemory = [  // linenumber
  0000000, 0000000, 0000000, 0600061, 0601561, 0601556, 0710041, 0675017, 0710020, 0710140, 0757777, 0000010, 0675017, 0000001, 0006000, 0003000,  // 0000000
  0777777, 0675777, 0710010, 0710040, 0710100, 0710200, 0667777, 0667017, 0040000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0000020
  0601672, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0000040
  0000000, 0720004, 0220002, 0200000, 0720054, 0610001, 0000000, 0260142, 0202760, 0400066, 0240074, 0600077, 0000000, 0260142, 0200074, 0640200,  // 0000060
  0402761, 0422760, 0640400, 0600143, 0402760, 0661003, 0170171, 0202762, 0240074, 0170171, 0200074, 0240066, 0170171, 0202763, 0402764, 0170171,  // 0000100
  0200066, 0402765, 0170171, 0200066, 0402766, 0170171, 0200074, 0667007, 0240066, 0060074, 0640400, 0600141, 0202767, 0220074, 0642000, 0761000,  // 0000120
  0600142, 0200066, 0600142, 0761000, 0402760, 0640400, 0600105, 0402760, 0640200, 0600154, 0422760, 0600105, 0422760, 0600100, 0000000, 0260160,  // 0000140
  0100000, 0170171, 0200156, 0440160, 0672001, 0673777, 0673777, 0610160, 0000000, 0000000, 0260200, 0200171, 0640200, 0761000, 0673777, 0673777,  // 0000160
  0100000, 0640200, 0761000, 0240170, 0760200, 0540170, 0540170, 0540170, 0540170, 0540170, 0540170, 0540170, 0540170, 0540170, 0540170, 0540170,  // 0000200
  0540170, 0540170, 0540170, 0540170, 0540170, 0540170, 0240170, 0100200, 0060171, 0640400, 0600243, 0200170, 0761000, 0673777, 0673777, 0761000,  // 0000220
  0673777, 0673777, 0240170, 0440200, 0200170, 0610200, 0000000, 0260260, 0710023, 0240304, 0340305, 0220246, 0340246, 0460304, 0600261, 0200305,  // 0000240
  0600260, 0200305, 0665001, 0240305, 0200246, 0663003, 0650100, 0600255, 0240246, 0200305, 0665001, 0402770, 0420246, 0640500, 0600255, 0640200,  // 0000260
  0761000, 0240246, 0440305, 0600255, 0000000, 0000000, 0000000, 0260317, 0200306, 0677777, 0677377, 0240315, 0600317, 0000000, 0260317, 0100000,  // 0000300
  0640200, 0761000, 0240306, 0200315, 0640400, 0600334, 0761000, 0673777, 0673777, 0761000, 0673777, 0673777, 0420306, 0640400, 0600376, 0560306,  // 0000320
  0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306, 0560306,  // 0000340
  0560306, 0400306, 0320306, 0764000, 0673001, 0220315, 0642000, 0761000, 0240315, 0100317, 0060315, 0673777, 0673777, 0440317, 0440317, 0200306,  // 0000360
  0642000, 0761000, 0220315, 0610317, 0260411, 0330412, 0440412, 0330412, 0440412, 0600411, 0000000, 0260554, 0210554, 0260434, 0202771, 0250412,  // 0000400
  0440412, 0260555, 0440554, 0202772, 0250412, 0440412, 0202773, 0250412, 0440412, 0760006, 0710006, 0243112, 0220434, 0760200, 0663007, 0323113,  // 0000420
  0222774, 0402775, 0260443, 0600443, 0760000, 0600557, 0600602, 0600610, 0600616, 0600624, 0600632, 0202776, 0250412, 0440412, 0402777, 0260556,  // 0000440
  0200556, 0250412, 0440412, 0203000, 0250412, 0440412, 0203001, 0250412, 0440412, 0203002, 0250412, 0440412, 0203003, 0250412, 0440412, 0203004,  // 0000460
  0250412, 0440412, 0203005, 0250412, 0440412, 0203006, 0250412, 0440412, 0203007, 0250412, 0440412, 0203005, 0250412, 0440412, 0203010, 0250412,  // 0000500
  0440412, 0203011, 0250412, 0440412, 0203012, 0250412, 0440412, 0203013, 0250412, 0440412, 0203014, 0250412, 0440412, 0203015, 0250412, 0440412,  // 0000520
  0203016, 0250412, 0440412, 0203017, 0250412, 0440412, 0203020, 0250412, 0440412, 0200555, 0250412, 0440412, 0600554, 0600555, 0600556, 0203021,  // 0000540
  0250412, 0440412, 0620404, 0203022, 0250412, 0440412, 0620404, 0203023, 0250412, 0440412, 0203024, 0250412, 0440412, 0223113, 0463112, 0600435,  // 0000560
  0440434, 0600432, 0203025, 0250412, 0440412, 0620404, 0203026, 0600564, 0203027, 0250412, 0440412, 0620404, 0203030, 0600564, 0203031, 0250412,  // 0000600
  0440412, 0620404, 0203032, 0600564, 0203033, 0250412, 0440412, 0620404, 0203034, 0600564, 0640006, 0600642, 0760016, 0203035, 0250412, 0440412,  // 0000620
  0203036, 0600573, 0760006, 0203037, 0250412, 0440412, 0203040, 0600573, 0260675, 0640060, 0600675, 0200031, 0671001, 0063041, 0403042, 0240031,  // 0000640
  0671777, 0023043, 0640200, 0062767, 0243116, 0200031, 0661017, 0023043, 0640200, 0062767, 0243117, 0620676, 0730000, 0600675, 0261117, 0200031,  // 0000660
  0671001, 0063041, 0403042, 0240031, 0675777, 0675037, 0640200, 0761000, 0665007, 0403044, 0260715, 0764206, 0724007, 0600715, 0403116, 0663777,  // 0000700
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777,  // 0000720
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777,  // 0000740
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777,  // 0000760
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777,  // 0001000
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777,  // 0001020
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777,  // 0001040
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777,  // 0001060
  0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0403116, 0663777, 0663777, 0403117, 0663777, 0663777, 0730000, 0724007, 0640006, 0601117,  // 0001100
  0760016, 0761000, 0663777, 0663777, 0761000, 0663777, 0663777, 0600715, 0261134, 0640040, 0601134, 0461441, 0601134, 0710002, 0241441, 0760005,  // 0001120
  0201214, 0261213, 0261145, 0261156, 0441156, 0200000, 0421443, 0640400, 0601171, 0403045, 0650500, 0601173, 0423046, 0665377, 0220000, 0720307,  // 0001140
  0760015, 0441156, 0503047, 0601204, 0501213, 0601174, 0261145, 0441156, 0601145, 0403050, 0601152, 0640005, 0601215, 0441214, 0441214, 0523051,  // 0001160
  0601161, 0706000, 0241214, 0601161, 0203052, 0501213, 0601174, 0261145, 0706001, 0261156, 0601145, 0220000, 0006000, 0760005, 0201272, 0261271,  // 0001200
  0261223, 0261234, 0441234, 0200000, 0421443, 0640400, 0601247, 0403045, 0650500, 0601251, 0423046, 0665377, 0220000, 0720207, 0760015, 0441234,  // 0001220
  0503053, 0601262, 0501271, 0601252, 0261223, 0441234, 0601223, 0403050, 0601230, 0640005, 0601273, 0441272, 0441272, 0523054, 0601237, 0706022,  // 0001240
  0241272, 0601237, 0203055, 0501271, 0601252, 0261223, 0706023, 0261234, 0601223, 0220000, 0006022, 0760005, 0201350, 0261347, 0261301, 0261312,  // 0001260
  0441312, 0200000, 0421443, 0640400, 0601325, 0403045, 0650500, 0601327, 0423046, 0665377, 0220000, 0720107, 0760015, 0441312, 0503056, 0601340,  // 0001300
  0501347, 0601330, 0261301, 0441312, 0601301, 0403050, 0601306, 0640005, 0601351, 0441350, 0441350, 0523057, 0601315, 0706044, 0241350, 0601315,  // 0001320
  0203060, 0501347, 0601330, 0261301, 0706045, 0261312, 0601301, 0220000, 0006044, 0760005, 0201426, 0261425, 0261357, 0261370, 0441370, 0200000,  // 0001340
  0421443, 0640400, 0601403, 0403045, 0650500, 0601405, 0423046, 0665377, 0220000, 0720007, 0760015, 0441370, 0503061, 0601416, 0501425, 0601406,  // 0001360
  0261357, 0441370, 0601357, 0403050, 0601364, 0640005, 0601427, 0441426, 0441426, 0523062, 0601373, 0706306, 0241426, 0601373, 0203063, 0501425,  // 0001400
  0601406, 0261357, 0706307, 0261370, 0601357, 0220000, 0006306, 0461442, 0601134, 0710020, 0241442, 0710001, 0401443, 0640200, 0403064, 0241443,  // 0001420
  0601134, 0000000, 0000000, 0010000, 0223065, 0323120, 0703365, 0261703, 0403066, 0261737, 0403066, 0261747, 0403066, 0261772, 0403066, 0262006,  // 0001440
  0403066, 0243121, 0403066, 0243122, 0403066, 0262327, 0403067, 0262343, 0403067, 0243123, 0403067, 0243124, 0403067, 0261732, 0403067, 0262577,  // 0001460
  0403067, 0243125, 0403067, 0243126, 0403067, 0243127, 0403067, 0243130, 0702310, 0063365, 0640100, 0601534, 0702314, 0063366, 0640100, 0601534,  // 0001500
  0700001, 0403643, 0640200, 0601530, 0700001, 0403644, 0650200, 0601534, 0100011, 0665001, 0243131, 0601703, 0463131, 0601703, 0760011, 0760012,  // 0001520
  0702310, 0063365, 0640100, 0760001, 0650100, 0443132, 0702314, 0063366, 0640100, 0760002, 0650100, 0443133, 0760002, 0601564, 0701676, 0243134,  // 0001540
  0601564, 0700040, 0243134, 0601613, 0203135, 0640400, 0601576, 0463135, 0601576, 0203132, 0523133, 0601602, 0710001, 0243135, 0762200, 0023070,  // 0001560
  0650100, 0601621, 0203132, 0223133, 0760400, 0762200, 0023070, 0640100, 0601621, 0343132, 0343133, 0762200, 0671077, 0023071, 0640100, 0761000,  // 0001600
  0243135, 0703365, 0261623, 0340000, 0441623, 0523072, 0601623, 0702310, 0243365, 0702314, 0243366, 0203073, 0243415, 0243445, 0761000, 0243416,  // 0001620
  0243446, 0203074, 0243637, 0703661, 0243645, 0220020, 0652000, 0601652, 0170412, 0002735, 0243646, 0170412, 0002746, 0100006, 0243643, 0243644,  // 0001640
  0200012, 0243641, 0243642, 0702000, 0243525, 0243526, 0100022, 0243653, 0243654, 0601444, 0261675, 0764000, 0720011, 0601675, 0261702, 0762200,  // 0001660
  0663777, 0663777, 0601702, 0201703, 0650100, 0602011, 0663777, 0663777, 0443136, 0642000, 0602003, 0700001, 0401703, 0261734, 0700001, 0401737,  // 0001700
  0261740, 0700001, 0401747, 0261750, 0700001, 0401772, 0261773, 0700001, 0402006, 0261766, 0201732, 0262530, 0201734, 0650500, 0601774, 0201737,  // 0001720
  0421740, 0640200, 0761000, 0243137, 0420016, 0640400, 0601774, 0201747, 0421750, 0640200, 0761000, 0420016, 0640400, 0601774, 0403137, 0420017,  // 0001740
  0640400, 0601774, 0203103, 0251703, 0251734, 0212006, 0401766, 0761000, 0675377, 0402770, 0241772, 0241773, 0441740, 0441750, 0441773, 0441766,  // 0001760
  0441734, 0523075, 0601734, 0211703, 0262005, 0622005, 0202006, 0403120, 0243120, 0441737, 0441747, 0441772, 0442006, 0443121, 0443122, 0442327,  // 0002000
  0442343, 0443140, 0443123, 0443124, 0441732, 0442577, 0443125, 0443126, 0443127, 0443130, 0441703, 0523076, 0601703, 0211703, 0650100, 0602045,  // 0002020
  0262041, 0622041, 0212006, 0403120, 0243120, 0621130, 0620650, 0463120, 0602047, 0601444, 0262133, 0760200, 0413121, 0253121, 0103077, 0411737,  // 0002040
  0251737, 0760200, 0413122, 0253122, 0103077, 0411747, 0251747, 0702134, 0262117, 0212006, 0765000, 0675007, 0243141, 0423100, 0640400, 0442117,  // 0002060
  0200031, 0671001, 0063041, 0403042, 0240031, 0023101, 0043102, 0242120, 0200031, 0671001, 0063041, 0403042, 0240031, 0677777, 0676777, 0102117,  // 0002100
  0760400, 0411747, 0663777, 0663777, 0411737, 0720307, 0463141, 0602100, 0471772, 0602133, 0351703, 0602133, 0677001, 0677007, 0262167, 0471772,  // 0002120
  0602146, 0203103, 0251703, 0710002, 0251772, 0602167, 0211737, 0675777, 0100021, 0413122, 0253122, 0103077, 0411747, 0251747, 0675777, 0100021,  // 0002140
  0413121, 0253121, 0103077, 0411737, 0251737, 0231747, 0720107, 0602167, 0262245, 0471772, 0602245, 0702246, 0251703, 0700007, 0252006, 0200031,  // 0002160
  0671001, 0063041, 0403042, 0240031, 0677777, 0676777, 0100026, 0411737, 0251737, 0663777, 0663777, 0411747, 0251747, 0200031, 0671001, 0063041,  // 0002200
  0403042, 0240031, 0677777, 0676777, 0100027, 0253122, 0333121, 0710003, 0243142, 0200031, 0252343, 0212343, 0640400, 0422761, 0640200, 0402761,  // 0002220
  0252343, 0463142, 0602233, 0100024, 0251772, 0602245, 0262307, 0471772, 0602304, 0213125, 0251703, 0702000, 0252006, 0473126, 0602260, 0353126,  // 0002240
  0100025, 0253127, 0213130, 0400030, 0253130, 0200031, 0671001, 0063041, 0403042, 0240031, 0043104, 0413130, 0640200, 0602307, 0203103, 0251703,  // 0002260
  0710010, 0251772, 0702000, 0252006, 0211737, 0231747, 0720207, 0602307, 0262713, 0633134, 0323143, 0602320, 0262713, 0633134, 0672017, 0323143,  // 0002300
  0223143, 0760206, 0642000, 0400013, 0662001, 0642000, 0420013, 0402327, 0252327, 0640010, 0602335, 0352327, 0661177, 0662001, 0642000, 0760016,  // 0002320
  0233123, 0652000, 0760006, 0402343, 0640400, 0422761, 0640200, 0402761, 0252343, 0170074, 0243144, 0343116, 0343117, 0640060, 0602430, 0211737,  // 0002340
  0675777, 0675003, 0243145, 0170156, 0203145, 0243146, 0211747, 0675777, 0675003, 0243145, 0170156, 0203145, 0403146, 0420015, 0650500, 0602714,  // 0002360
  0400015, 0243145, 0170246, 0675777, 0170171, 0203145, 0677003, 0650020, 0677003, 0640100, 0602430, 0323145, 0211737, 0761000, 0170306, 0203145,  // 0002400
  0760000, 0243116, 0211747, 0761000, 0170306, 0203145, 0760000, 0243117, 0760200, 0513123, 0760006, 0212343, 0170066, 0243147, 0675777, 0100014,  // 0002420
  0650006, 0760200, 0403117, 0413122, 0253122, 0103077, 0411747, 0251747, 0203144, 0675777, 0100014, 0761000, 0650006, 0760200, 0403116, 0413121,  // 0002440
  0253121, 0103077, 0411737, 0251737, 0203144, 0675037, 0243150, 0203147, 0675037, 0243114, 0211737, 0423150, 0243151, 0423150, 0243152, 0211747,  // 0002460
  0403114, 0243153, 0403114, 0243154, 0203144, 0675377, 0243150, 0203147, 0675377, 0243114, 0203150, 0243155, 0403114, 0243156, 0243157, 0203150,  // 0002500
  0423114, 0243160, 0761000, 0243161, 0203114, 0243162, 0764200, 0724007, 0602530, 0730000, 0200031, 0671001, 0063041, 0403042, 0240031, 0675777,  // 0002520
  0675017, 0640400, 0761000, 0243163, 0223143, 0662003, 0652000, 0602574, 0203144, 0675377, 0243150, 0203147, 0675377, 0243114, 0473123, 0602562,  // 0002540
  0353123, 0602574, 0203153, 0423114, 0243153, 0203151, 0403150, 0243151, 0223153, 0720007, 0463163, 0602550, 0471772, 0602667, 0351772, 0202577,  // 0002560
  0761000, 0650030, 0761200, 0023143, 0661007, 0640400, 0602667, 0473124, 0602613, 0353124, 0602667, 0703365, 0262615, 0202615, 0650100, 0602625,  // 0002600
  0442615, 0523105, 0602615, 0760400, 0602623, 0203106, 0252615, 0700030, 0402615, 0262633, 0223152, 0322633, 0403066, 0262637, 0223154, 0322637,  // 0002620
  0403066, 0262664, 0403066, 0262666, 0403066, 0262654, 0403066, 0262660, 0203144, 0100007, 0761000, 0413121, 0242654, 0203147, 0100007, 0413122,  // 0002640
  0242660, 0100010, 0251772, 0100011, 0242664, 0700020, 0262666, 0473127, 0602713, 0353127, 0213126, 0650100, 0602713, 0203143, 0761000, 0052577,  // 0002660
  0023107, 0640100, 0602713, 0211703, 0253125, 0203110, 0251703, 0100023, 0251772, 0700003, 0252006, 0602713, 0353121, 0353122, 0640050, 0602730,  // 0002700
  0202767, 0251737, 0251747, 0212006, 0243150, 0463150, 0602725, 0602713, 0203103, 0251703, 0710010, 0251772, 0602713, 0111131, 0111111, 0111111,  // 0002720
  0111163, 0311111, 0146111, 0111114, 0700000, 0000005, 0013113, 0113111, 0116313, 0131111, 0161151, 0111633, 0365114, 0700000, 0000005, 0203164,  // 0002740
  0062210, 0311040, 0242763, 0756103, 0121312, 0532511, 0144417, 0377777, 0000001, 0760015, 0203151, 0223153, 0663777, 0000444, 0640005, 0000004,  // 0002760
  0243151, 0323153, 0602531, 0760005, 0203162, 0761000, 0243162, 0203155, 0243155, 0203161, 0223157, 0243157, 0323161, 0203156, 0223160, 0243160,  // 0003000
  0323156, 0403150, 0423114, 0730000, 0724007, 0403162, 0403155, 0403156, 0423161, 0423162, 0423155, 0403160, 0423157, 0243164, 0323115, 0203164,  // 0003020
  0223115, 0355760, 0355670, 0400340, 0000716, 0002000, 0001000, 0226022, 0761777, 0006022, 0226000, 0226044, 0006044, 0226022, 0226306, 0006306,  // 0003040
  0226044, 0227652, 0007652, 0226306, 0020000, 0773777, 0000030, 0000002, 0000040, 0000037, 0343661, 0200000, 0144420, 0203415, 0203414, 0675007,  // 0003060
  0000140, 0000777, 0667000, 0402052, 0400000, 0203415, 0002136, 0600000, 0402170, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003100
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003120
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003140
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003160
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003200
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003220
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003240
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003260
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003300
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003320
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003340
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003360
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003400
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003420
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003440
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003460
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003500
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003520
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003540
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003560
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003600
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003620
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003640
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003660
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003700
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003720
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003740
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0003760
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004000
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004020
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004040
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004060
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004100
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004120
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004140
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004160
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004200
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004220
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004240
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004260
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004300
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004320
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004340
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004360
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004400
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004420
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004440
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004460
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004500
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004520
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004540
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004560
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004600
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004620
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004640
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004660
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004700
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004720
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004740
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0004760
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005000
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005020
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005040
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005060
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005100
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005120
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005140
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005160
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005200
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005220
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005240
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005260
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005300
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005320
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005340
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005360
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005400
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005420
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005440
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005460
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005500
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005520
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005540
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005560
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005600
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005620
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005640
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005660
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005700
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005720
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005740
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0005760
  0014777, 0271400, 0014436, 0641000, 0014072, 0124000, 0013430, 0503000, 0012751, 0076400, 0011231, 0215400, 0007071, 0606400, 0006426, 0340000,  // 0006000
  0002645, 0142000, 0014345, 0107400, 0014244, 0761000, 0014212, 0750400, 0014141, 0621000, 0013630, 0464000, 0013512, 0273400, 0011577, 0642000,  // 0006020
  0010133, 0254000, 0004251, 0220000, 0017722, 0246400, 0017226, 0605400, 0017026, 0251000, 0016712, 0504000, 0016623, 0347000, 0016404, 0730400,  // 0006040
  0016174, 0040000, 0016021, 0052000, 0015445, 0614400, 0015320, 0542400, 0015051, 0330000, 0015050, 0262000, 0014656, 0115000, 0014624, 0032000,  // 0006060
  0014505, 0704000, 0014445, 0506000, 0014415, 0660400, 0014347, 0743000, 0014315, 0422400, 0014274, 0773400, 0014264, 0464000, 0014255, 0160400,  // 0006100
  0014250, 0673400, 0014241, 0360000, 0014144, 0526400, 0013436, 0224000, 0013144, 0276000, 0013132, 0374000, 0013057, 0140400, 0012151, 0115000,  // 0006120
  0012070, 0110000, 0011240, 0304400, 0011130, 0347400, 0010654, 0515000, 0010443, 0357400, 0010442, 0266000, 0007744, 0404400, 0007703, 0476000,  // 0006140
  0007564, 0512000, 0007460, 0765000, 0007340, 0055000, 0007273, 0203000, 0007002, 0776400, 0006617, 0327000, 0006123, 0515400, 0005676, 0631000,  // 0006160
  0005440, 0114400, 0005423, 0263000, 0005403, 0734000, 0005312, 0401400, 0005255, 0441000, 0005167, 0730400, 0005140, 0715000, 0005027, 0367000,  // 0006200
  0004767, 0611400, 0004474, 0516000, 0004434, 0245000, 0004240, 0521000, 0004141, 0037400, 0004045, 0620400, 0003761, 0154400, 0003644, 0736400,  // 0006220
  0003331, 0416000, 0003246, 0234000, 0003245, 0706000, 0003225, 0416400, 0003066, 0041000, 0002677, 0166000, 0002566, 0332400, 0002462, 0763000,  // 0006240
  0002376, 0523400, 0002232, 0242000, 0001552, 0673000, 0001441, 0153000, 0001424, 0503000, 0001247, 0766400, 0001215, 0101000, 0001044, 0771400,  // 0006260
  0000733, 0165400, 0000622, 0505400, 0000527, 0247000, 0017777, 0670000, 0017712, 0337400, 0017712, 0442000, 0017656, 0624400, 0017441, 0600400,  // 0006300
  0017410, 0120000, 0017357, 0754400, 0017267, 0123400, 0017210, 0351400, 0017076, 0634400, 0016734, 0070400, 0016706, 0142400, 0016655, 0600000,  // 0006320
  0016642, 0604000, 0016631, 0326000, 0016627, 0036400, 0016560, 0412000, 0016547, 0032000, 0016451, 0137400, 0016335, 0556400, 0016323, 0133000,  // 0006340
  0016272, 0515000, 0016222, 0776400, 0016165, 0525400, 0016164, 0156400, 0016157, 0447400, 0016115, 0414000, 0016060, 0625400, 0016040, 0141000,  // 0006360
  0015736, 0334000, 0015714, 0353000, 0015701, 0627000, 0015660, 0042000, 0015652, 0404000, 0015621, 0143000, 0015604, 0153000, 0015560, 0217400,  // 0006400
  0015556, 0702000, 0015537, 0620000, 0015531, 0405400, 0015513, 0001000, 0015424, 0562000, 0015350, 0732400, 0015306, 0213000, 0015267, 0101000,  // 0006420
  0015262, 0370400, 0015203, 0656400, 0015172, 0146400, 0015161, 0142400, 0015156, 0646400, 0015152, 0347400, 0015132, 0257000, 0015111, 0305000,  // 0006440
  0015102, 0304000, 0015074, 0373000, 0015073, 0311400, 0015065, 0257000, 0015063, 0245000, 0015051, 0263000, 0015035, 0266000, 0015022, 0774400,  // 0006460
  0015012, 0246400, 0014777, 0161000, 0014770, 0727000, 0014761, 0214000, 0014754, 0263000, 0014753, 0532400, 0014735, 0435400, 0014704, 0730400,  // 0006500
  0014652, 0143400, 0014646, 0076000, 0014632, 0677400, 0014622, 0162000, 0014612, 0230000, 0014573, 0022000, 0014560, 0557000, 0014551, 0654000,  // 0006520
  0014546, 0431400, 0014546, 0364000, 0014534, 0255400, 0014477, 0260000, 0014474, 0632400, 0014452, 0567000, 0014447, 0037400, 0014444, 0553000,  // 0006540
  0014400, 0550400, 0014371, 0414400, 0014367, 0772000, 0014361, 0047400, 0014350, 0645400, 0014346, 0024000, 0014332, 0370400, 0014332, 0042400,  // 0006560
  0014305, 0103000, 0014277, 0322400, 0014273, 0653400, 0014256, 0153000, 0014252, 0675400, 0014250, 0707400, 0014243, 0151000, 0014225, 0741400,  // 0006600
  0014224, 0056400, 0014224, 0655000, 0014213, 0273400, 0014160, 0400000, 0014133, 0217400, 0014112, 0422000, 0014102, 0346400, 0014056, 0536000,  // 0006620
  0014034, 0734400, 0014022, 0156000, 0014020, 0607000, 0014013, 0345000, 0013767, 0525400, 0013765, 0250000, 0013734, 0270000, 0013734, 0242000,  // 0006640
  0013707, 0670400, 0013700, 0544000, 0013627, 0065000, 0013575, 0347000, 0013575, 0712000, 0013570, 0660000, 0013544, 0124000, 0013510, 0445400,  // 0006660
  0013501, 0461000, 0013473, 0537400, 0013466, 0161400, 0013446, 0227400, 0013415, 0034400, 0013351, 0227400, 0013350, 0433000, 0013346, 0570000,  // 0006700
  0013334, 0433400, 0013332, 0477000, 0013266, 0721000, 0013265, 0353400, 0013257, 0517400, 0013204, 0773400, 0013105, 0451000, 0013051, 0150000,  // 0006720
  0013041, 0213000, 0013001, 0404000, 0012733, 0625400, 0012560, 0461400, 0012553, 0763000, 0012546, 0036000, 0012501, 0741000, 0012473, 0450000,  // 0006740
  0012460, 0557400, 0012426, 0154000, 0012340, 0726400, 0012235, 0105000, 0012227, 0052000, 0012202, 0516000, 0012200, 0370400, 0012175, 0052400,  // 0006760
  0012171, 0661400, 0012167, 0322400, 0012150, 0551400, 0012140, 0106400, 0012050, 0213400, 0011714, 0037000, 0011653, 0574000, 0011647, 0627400,  // 0007000
  0011567, 0745000, 0011547, 0767000, 0011503, 0072000, 0011472, 0767400, 0011466, 0541400, 0011464, 0166000, 0011366, 0534000, 0011307, 0141000,  // 0007020
  0011251, 0560400, 0011234, 0167400, 0011233, 0001400, 0011212, 0570400, 0011131, 0343400, 0011062, 0505400, 0011033, 0776000, 0011016, 0157400,  // 0007040
  0010562, 0465400, 0010550, 0751400, 0010546, 0353400, 0010526, 0131400, 0010457, 0402000, 0010423, 0734000, 0010404, 0535400, 0010372, 0113000,  // 0007060
  0010353, 0176000, 0010344, 0474400, 0010241, 0626000, 0010240, 0774400, 0010163, 0465000, 0010156, 0120400, 0010142, 0354400, 0010123, 0032400,  // 0007100
  0010030, 0121400, 0007777, 0151400, 0007654, 0776000, 0007647, 0321000, 0007547, 0515400, 0007476, 0652400, 0007457, 0172400, 0007350, 0631000,  // 0007120
  0007315, 0314400, 0007217, 0706400, 0007216, 0315400, 0007140, 0465400, 0007055, 0517400, 0007022, 0676000, 0007005, 0057400, 0006671, 0314400,  // 0007140
  0006655, 0271400, 0006551, 0027000, 0006454, 0041000, 0006452, 0620000, 0006430, 0700400, 0006407, 0554400, 0006400, 0277000, 0006322, 0753000,  // 0007160
  0006210, 0277400, 0006206, 0241000, 0006176, 0704000, 0006157, 0306000, 0006153, 0032400, 0006113, 0336000, 0006056, 0722400, 0006014, 0034400,  // 0007200
  0005733, 0442400, 0005535, 0621000, 0005526, 0533000, 0005525, 0173400, 0005462, 0443400, 0005455, 0343400, 0005423, 0127400, 0005404, 0322000,  // 0007220
  0005373, 0066400, 0005365, 0362000, 0005356, 0504400, 0005331, 0266000, 0005325, 0540400, 0005261, 0601000, 0005245, 0427400, 0005242, 0425000,  // 0007240
  0005207, 0445000, 0005205, 0620000, 0005112, 0016400, 0005107, 0334400, 0005103, 0436000, 0005064, 0242400, 0005062, 0460000, 0005053, 0642400,  // 0007260
  0005032, 0505000, 0005027, 0031000, 0005026, 0415400, 0005014, 0205000, 0004657, 0607000, 0004622, 0165400, 0004575, 0154400, 0004521, 0222400,  // 0007300
  0004424, 0773400, 0004400, 0420400, 0004377, 0556400, 0004334, 0706400, 0004333, 0060000, 0004235, 0644000, 0004212, 0555400, 0004200, 0411400,  // 0007320
  0004033, 0725400, 0004033, 0061400, 0004031, 0276400, 0004031, 0041400, 0004023, 0017000, 0003776, 0034400, 0003762, 0143000, 0003746, 0354400,  // 0007340
  0003724, 0417400, 0003646, 0046000, 0003645, 0371400, 0003631, 0631400, 0003622, 0425000, 0003621, 0367000, 0003572, 0531000, 0003527, 0641000,  // 0007360
  0003425, 0350400, 0003422, 0710400, 0003416, 0315400, 0003334, 0056400, 0003307, 0252000, 0003277, 0674400, 0003262, 0406400, 0003147, 0361400,  // 0007400
  0003120, 0462400, 0003120, 0507400, 0003061, 0001400, 0003005, 0121400, 0002777, 0336400, 0002767, 0756000, 0002740, 0312400, 0002733, 0304400,  // 0007420
  0002666, 0320000, 0002655, 0327000, 0002635, 0010400, 0002622, 0135400, 0002614, 0106000, 0002436, 0251400, 0002420, 0555400, 0002416, 0555400,  // 0007440
  0002377, 0553000, 0002322, 0461000, 0002264, 0175000, 0002247, 0243000, 0002231, 0757000, 0002224, 0355400, 0002216, 0261000, 0002171, 0247400,  // 0007460
  0002146, 0263400, 0002145, 0617000, 0002144, 0702000, 0002110, 0625000, 0002007, 0431000, 0001776, 0467000, 0001750, 0571400, 0001741, 0157000,  // 0007500
  0001711, 0155400, 0001702, 0067000, 0001641, 0473000, 0001635, 0334400, 0001575, 0402400, 0001515, 0435000, 0001507, 0641000, 0001473, 0474400,  // 0007520
  0001455, 0443400, 0001436, 0300000, 0001265, 0741400, 0001247, 0064000, 0001245, 0534000, 0001151, 0641000, 0001115, 0752000, 0001114, 0205000,  // 0007540
  0001070, 0012000, 0001051, 0060000, 0001032, 0600000, 0000777, 0770400, 0000721, 0443400, 0000675, 0205000, 0000657, 0537000, 0000635, 0643000,  // 0007560
  0000615, 0136400, 0000534, 0045400, 0000512, 0145000, 0000476, 0410400, 0000441, 0664400, 0000431, 0622000, 0000421, 0037000, 0000415, 0620400,  // 0007600
  0000360, 0424400, 0000337, 0416400, 0000331, 0010000, 0000323, 0102400, 0000314, 0213000, 0000266, 0413000, 0000217, 0072000, 0000205, 0456400,  // 0007620
  0000203, 0016000, 0000200, 0523400, 0000041, 0110000, 0000022, 0665000, 0000004, 0464000, 0761200, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0007640
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0007660
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0007700
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000,  // 0007720
  0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000, 0000000]; // 0007740
// Spacewar! was conceived in 1961 by Martin Graetz, Stephen Russell, and Wayne Wiitanen. It was first realized on the PDP-1 in 1962 by Stephen Russell, Peter Samson, Dan Edwards, and Martin Graetz, together with Alan Kotok, Steve Piner, and Robert A Saunders. Spacewar! is in the public domain but this credit paragraph must accompany all distributed versions of the program.
</script>
</head>
<body onload="ClientBoot();" style="background:black; padding:0 0 0 0; margin:0 0 0 0;" onselectstart="return false" onscrollstart="return false">
<font face="Arial" size=1>

<!-- z-index strictly matters on every item below, putting touch pads on top, transparent canvas in the middle, and instructions on the bottom.-->
<div id="UserControls" style="z-index:0; position:absolute; top:0px; left:0px; overflow:hidden; visibility:visible; opacity:0.6;">
<div id="DivALeft" style="z-index:1; position:absolute; border-radius:15px;"><div id="CtlALeft" style="z-index:2; position:absolute;"><span id="BtnALeft" style="z-index:3; position:absolute;">7</span></div></div>
<div id="DivAThrust" style="z-index:4; position:absolute; border-radius:15px;"><div id="CtlAThrust" style="z-index:5;"><span id="BtnAThrust" style="z-index:6;">4</span></div></div>
<div id="DivARight" style="z-index:7; position:absolute; border-radius:15px;"><div id="CtlARight" style="z-index:8;"><span id="BtnARight" style="z-index:9;">1</span></div></div>
<div id="DivATorpedo" style="z-index:10; position:absolute; border-radius:15px;"><div id="CtlATorpedo" style="z-index:11;"><span id="BtnATorpedo" style="z-index:12;">2</span></div></div>
<div id="DivCenter" style="z-index:13; position:absolute; border-radius:15px;"><div id="CtlCenter" style="z-index:14;"><span id="BtnCenter" style="z-index:15;">5</span></div></div>
<div id="DivBLeft" style="z-index:16; position:absolute; border-radius:15px;"><div id="CtlBLeft" style="z-index:17;"><span id="BtnBLeft" style="z-index:18;">9</span></div></div>
<div id="DivBThrust" style="z-index:19; position:absolute; border-radius:15px;"><div id="CtlBThrust" style="z-index:20;"><span id="BtnBThrust" style="z-index:21;">6</span></div></div>
<div id="DivBRight" style="z-index:22; position:absolute; border-radius:15px;"><div id="CtlBRight" style="z-index:23;"><span id="BtnBRight" style="z-index:24;">3</span></div></div>
<div id="DivBTorpedo" style="z-index:25; position:absolute; border-radius:15px;"><div id="CtlBTorpedo" style="z-index:26;"><span id="BtnBTorpedo" style="z-index:27;">8</span></div></div>
</div>

<div id="CRTdiv" style="z-index:28; position:relative; top:0px; left:0px;">
<div id="CRTclip" style="z-index:29; position:relative; top:0px; left:0px; overflow:hidden; width:140px; height:140px;">
<canvas id="CRTcanvas" style="z-index:30; position:relative; top:0px; left:0px;"></canvas>
</div>
</div>

<div id="PadALeft" style="z-index:40; position:absolute;"> </div>
<div id="PadAThrust" style="z-index:41; position:absolute;"> </div>
<div id="PadARight" style="z-index:42; position:absolute;"> </div>
<div id="PadATorpedo" style="z-index:43; position:absolute;"> </div>
<div id="PadCenter" style="z-index:44; position:absolute;"> </div>
<div id="PadBLeft" style="z-index:45; position:absolute;"> </div>
<div id="PadBThrust" style="z-index:46; position:absolute;"> </div>
<div id="PadBRight" style="z-index:47; position:absolute;"> </div>
<div id="PadBTorpedo" style="z-index:48; position:absolute;"> </div>

<div id="DivAbout" onClick="AboutToggle(-1);" style="z-index:50; position:absolute; left:0px; top:0px; visibility:visible; background-color:#FFFFFF; margin:20px 20px 20px 20px; padding:16px 16px 16px 16px; color:#000000; border-style:solid; border-width:4px; border-color:gray; display:inline-block; border-radius:15px;">
<span id="AboutText" style="font-family:Arial; color:black; font-size:4pt;">
<span id="AboutTitle" style="font-family:Arial; color:green; font-size:6pt;"><b><i>iSpacewar!</i></b></span><br>
The world's first video game (1962's 'Spacewar!') running on a simulation of the world's first commercially produced computer (DEC's PDP-1)
with added touch controls and sizing for modern play.
Maneuver with retros & thruster, avoid star's gravity, Left+Right risks Hyperspace, fuel & torpedos are limited.
<a href="http://Bedno.com/spacewar/about" target="about"><b>Bedno.com/spacewar/about</b></a></span>
</span></div>

<div id="DivDebug" style="visibility:hidden; position:absolute; left:0px; top:0px; background-color:#FFFFFF; padding:4px 4px 4px 4px; font-family:Arial; color:#000000; font-size:9pt;"> </div>

</font>
</body>
</html>
